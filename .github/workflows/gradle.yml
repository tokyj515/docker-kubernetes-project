name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          java-package: jdk

      - name: Set execute permission on gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Build Docker image
        run: docker build -t tokyj515/docker-kubernetes-test .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push tokyj515/docker-kubernetes-test

  deploy:
    needs: build  # deploy 작업이 build 작업을 필요로 함
    runs-on: ubuntu-22.04

    steps:
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Add SSH key
        run: echo "${{ secrets.AWS_EC2_SSH_KEY }}" > key.pem && chmod 600 key.pem

      - name: SSH and Apply Kubernetes Deployment on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            # Ensure Docker is installed and running
            sudo systemctl start docker
            sudo usermod -aG docker ubuntu

            # Pull Docker image
            sudo docker pull tokyj515/docker-kubernetes-test

            # Check kubectl context (optional)
            sudo kubectl config current-context

            # Apply Kubernetes deployment with root privileges
            sudo kubectl apply -f service-1.yaml
            sudo kubectl apply -f service-2.yaml
          EOF
